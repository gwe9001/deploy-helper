name: release

on:
  push:
    tags:
      - '**'

jobs:
  build-linux-windows:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install system dependencies
        run: chmod +x ./scripts/setup.sh && ./scripts/setup.sh

      - name: Install Node dependencies
        run: yarn install

      - name: Make (Linux)
        run: npm run make -- --platform linux

      - name: Make (Windows)
        run: npm run make -- --platform win32

      - name: Upload Linux and Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-windows-artifacts
          path: |
            out/make/deb/x64/*.deb
            out/make/rpm/x64/*.rpm
            out/make/squirrel.windows/x64/*.exe
            out/make/zip/win32/x64/*.zip

  build-macos:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [macos-latest, macos-13]
        include:
          - os: macos-latest
            arch: arm64
          - os: macos-13
            arch: x64
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Node dependencies
        run: yarn install

      - name: Make (macOS)
        run: npm run make -- --platform darwin

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}-artifacts
          path: |
            out/make/zip/darwin/**/*.zip
            out/make/*.dmg

  create-release:
    needs: [build-linux-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: true
          artifacts: |
            **/**/*.deb
            **/**/*.rpm
            **/**/*.exe
            **/**/*.zip
            **/**/*.dmg
